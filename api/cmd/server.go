package main

import (
	"context"
	"net/http"
	"os"

	"github.com/bufbuild/connect-go"
	"github.com/labstack/echo/v4"
	"github.com/labstack/echo/v4/middleware"

	greetv1 "github.com/jasonblanchard/kubeicon-api/gen/greet/v1"        // generated by protoc-gen-go
	"github.com/jasonblanchard/kubeicon-api/gen/greet/v1/greetv1connect" // generated by protoc-gen-connect-go
)

func main() {
	e := echo.New()
	e.Use(middleware.Logger())
	e.GET("/health", func(c echo.Context) error {
		return c.JSON(http.StatusOK, struct{ Status string }{Status: "OK!"})
	})

	upstreamHost := os.Getenv("UPSTREAM_HOST")

	e.GET("/greet", func(c echo.Context) error {
		client := greetv1connect.NewGreetServiceClient(
			http.DefaultClient,
			upstreamHost,
		)
		res, err := client.Greet(
			context.Background(),
			connect.NewRequest(&greetv1.GreetRequest{Name: "Jane"}),
		)
		if err != nil {
			e.Logger.Error(err.Error())
			return c.JSON(http.StatusInternalServerError, struct{ Status string }{Status: "Not OK :("})
		}

		return c.JSON(http.StatusOK, struct{ Greeting string }{Greeting: res.Msg.Greeting})
	})

	httpPort := os.Getenv("PORT")
	if httpPort == "" {
		httpPort = "8080"
	}

	e.Logger.Fatal(e.Start(":" + httpPort))

}
